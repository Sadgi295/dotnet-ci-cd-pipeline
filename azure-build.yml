# CI Pipeline

trigger:
  batch: true
  branches:
    include:
    - main # Trigger on push
  paths:
    include:
    - src/*
    - tests/*
    - '*.csproj'
    - azure-build.yml

pr:
  branches:
    include:
    - main
  paths:
    include:
    - src/*
    - tests/*
    - '*.csproj'
    - azure-build.yml

pool:
  vmImage: 'ubuntu-latest' # Linux agent

variables:
  buildConfiguration: 'Release' 
  dotnetSdkVersion: '6.0.x' # .NET SDK version
  projectPath: '**/*.csproj'
  testProjectPath: '**/*Tests.csproj'

stages:
- stage: Build
  displayName: 'Build and Test Stage'
  jobs:
  - job: BuildAndTest
    displayName: 'Build, Test, and Publish'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetSdkVersion)'

    - task: DotNetCoreCLI@2
      displayName: 'Restore Dependencies'
      inputs:
        command: 'restore'
        projects: '$(projectPath)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build Project'
      inputs:
        command: 'build'
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '$(testProjectPath)'
        arguments: '--configuration $(buildConfiguration) --no-build --no-restore'
        publishTestResults: true

    - task: DotNetCoreCLI@2
      displayName: 'Publish Project'
      inputs:
        command: 'publish'
        publishWebProjects: true 
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)/app'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
        ArtifactName: 'counterApp'
        publishLocation: 'Container' # Store artifact in Azure Pipelines
